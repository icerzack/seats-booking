services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER:-devops}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-devops}
      POSTGRES_DB: ${DB_NAME:-meeting_rooms}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-meeting_rooms}
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-devops}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-devops}
      SPRING_JPA_HIBERNATE_DDL-AUTO: validate
    restart: always
    depends_on:
      - postgres
    platform: linux/amd64
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge